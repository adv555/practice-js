{"version":3,"sources":["js/timer.js"],"names":["deadline","getTimeRemaining","endtime","t","Date","parse","days","Math","floor","seconds","minutes","total","hours","getZero","num","setClock","selector","refs","timer","document","querySelector","timeInterval","setInterval","updateClock","innerHTML","clearInterval"],"mappings":";AAAA,MAAMA,EAAW,aAEjB,SAASC,EAAiBC,GAClBC,MAAAA,EAAIC,KAAKC,MAAMH,GAAWE,KAAKC,MAAM,IAAID,MAC7CE,EAAOC,KAAKC,MAAML,EAAK,OACvBM,EAAUF,KAAKC,MAAOL,EAAI,IAAQ,IAClCO,EAAUH,KAAKC,MAAOL,EAAI,IAAO,GAAM,IAGlC,MAAA,CACLQ,MAAOR,EACPG,KAAMA,EACNM,MALQL,KAAKC,MAAOL,EAAK,KAAmB,IAM5CO,QAASA,EACTD,QAASA,GAIb,SAASI,EAAQC,GACXA,OAAAA,GAAO,GAAKA,EAAM,GACb,IAAMA,EAENA,EAIX,SAASC,EAASC,EAAUd,GACpBe,MAAAA,EAAO,CACXC,MAAOC,SAASC,cAAcJ,GAC9BV,KAAMa,SAASC,cAAc,SAC7BR,MAAOO,SAASC,cAAc,UAC9BV,QAASS,SAASC,cAAc,YAChCX,QAASU,SAASC,cAAc,YAChCC,aAAcC,YAAYC,EAAa,MAKhCA,SAAAA,IACDpB,MAAAA,EAAIF,EAAiBC,GAE3Be,EAAKX,KAAKkB,UAAYX,EAAQV,EAAEG,MAChCW,EAAKL,MAAMY,UAAYX,EAAQV,EAAES,OACjCK,EAAKP,QAAQc,UAAYX,EAAQV,EAAEO,SACnCO,EAAKR,QAAQe,UAAYX,EAAQV,EAAEM,SAE/BN,EAAEQ,OAAS,GACbc,cAAcR,EAAKI,cAXvBE,IAgBFR,EAAS,SAAUf","file":"timer.df5936d1.js","sourceRoot":"../src","sourcesContent":["const deadline = '2020-05-11';\n\nfunction getTimeRemaining(endtime) {\n  const t = Date.parse(endtime) - Date.parse(new Date()),\n    days = Math.floor(t / (1000 * 60 * 60 * 24)),\n    seconds = Math.floor((t / 1000) % 60),\n    minutes = Math.floor((t / 1000 / 60) % 60),\n    hours = Math.floor((t / (1000 * 60 * 60)) % 24);\n\n  return {\n    total: t,\n    days: days,\n    hours: hours,\n    minutes: minutes,\n    seconds: seconds,\n  };\n}\n\nfunction getZero(num) {\n  if (num >= 0 && num < 10) {\n    return '0' + num;\n  } else {\n    return num;\n  }\n}\n\nfunction setClock(selector, endtime) {\n  const refs = {\n    timer: document.querySelector(selector),\n    days: document.querySelector('#days'),\n    hours: document.querySelector('#hours'),\n    minutes: document.querySelector('#minutes'),\n    seconds: document.querySelector('#seconds'),\n    timeInterval: setInterval(updateClock, 1000),\n  };\n\n  updateClock();\n\n  function updateClock() {\n    const t = getTimeRemaining(endtime);\n\n    refs.days.innerHTML = getZero(t.days);\n    refs.hours.innerHTML = getZero(t.hours);\n    refs.minutes.innerHTML = getZero(t.minutes);\n    refs.seconds.innerHTML = getZero(t.seconds);\n\n    if (t.total <= 0) {\n      clearInterval(refs.timeInterval);\n    }\n  }\n}\n\nsetClock('.timer', deadline);\n"]}